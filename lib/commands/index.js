// Generated by CoffeeScript 1.6.2
(function() {
  var Commands, comerr, deepExtend, toarray;

  comerr = require("comerr");

  toarray = require("toarray");

  deepExtend = require("deep-extend");

  /*
  */


  Commands = (function() {
    /*
    */
    function Commands() {
      this._commands = {};
    }

    /*
    */


    Commands.prototype.describe = function() {
      var desc, key;

      desc = [];
      for (key in this._commands) {
        desc.push(this._inherit(this._commands[key].options));
      }
      return desc;
    };

    /*
    */


    Commands.prototype.register = function(options, listener) {
      return this._commands[options.name] = {
        listener: listener,
        options: options
      };
    };

    /*
    */


    Commands.prototype.execute = function(name, node, context, callback) {
      var ops;

      if (!(ops = this._commands[name])) {
        return callback(new comerr.NotFound("command \"" + name + "\" not found"));
      }
      return ops.listener.call(this, node, context, callback);
    };

    /*
    */


    Commands.prototype._inherit = function(options) {
      var cmd, from, newOps, _i, _len, _ref;

      from = toarray(options.inherit);
      newOps = deepExtend({}, options);
      for (_i = 0, _len = from.length; _i < _len; _i++) {
        cmd = from[_i];
        newOps = deepExtend(this._inherit(((_ref = this._commands[cmd]) != null ? _ref.options : void 0) || {}), newOps);
      }
      return newOps;
    };

    return Commands;

  })();

  module.exports = Commands;

}).call(this);
