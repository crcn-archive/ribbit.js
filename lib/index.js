// Generated by CoffeeScript 1.6.2
(function() {
  var Commands, Context, Evaluators, Node, Ribbit, flatstack, type;

  type = require("type-component");

  Context = require("./context");

  Node = require("./node");

  Evaluators = require("./evaluators");

  Commands = require("./commands");

  flatstack = require("flatstack");

  Ribbit = (function() {
    /*
    */
    function Ribbit() {
      this.commands = new Commands();
      this._evaluators = new Evaluators(this.commands);
      this._callstack = flatstack(this);
    }

    /*
    */


    Ribbit.prototype.run = function(source, context, callback) {
      var _this = this;

      if (context == null) {
        context = {};
      }
      if (callback == null) {
        callback = function() {};
      }
      if (type(context) === "function") {
        callback = context;
        context = {};
      }
      this._callstack.push(function(next) {
        var ctx, node;

        node = Node.cast(source);
        ctx = Context.cast(context);
        return _this._evaluators.run(node, ctx, function() {
          callback.apply(_this, arguments);
          return next();
        });
      });
      return this;
    };

    return Ribbit;

  })();

  exports.run = function(source, context, callback) {
    return new Ribbit().run(source, context, callback);
  };

  exports.Context = Context;

}).call(this);
