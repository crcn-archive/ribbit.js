// Generated by CoffeeScript 1.6.2
/*
 defines a new command
*/


(function() {
  var Evaluator, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Evaluator = (function(_super) {
    __extends(Evaluator, _super);

    function Evaluator() {
      _ref = Evaluator.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    Evaluator.prototype.run = function(node, context, next) {
      var name, ops, run,
        _this = this;

      name = node.name.substr(4);
      run = node.find("run");
      ops = {
        name: name,
        description: node.value.description || "",
        params: node.value.params || {},
        "public": node.value["public"] || false,
        inherit: node.value.inherit || []
      };
      this._commands.register(ops, function(node, context, next) {
        var childContext, setup;

        childContext = context.child({
          caller: node
        }).child(node.value);
        setup = childContext.getLocal("setup");
        if (setup) {
          setup(context);
        }
        return _this.all.run(run, childContext, next);
      });
      return next(null, false);
    };

    /*
    */


    Evaluator.prototype.test = function(node) {
      return node.name.substr(0, 4) === "def ";
    };

    return Evaluator;

  })(require("./base"));

  module.exports = Evaluator;

}).call(this);
